material {
    name : blitMedium,
    parameters : [
        {
            type : sampler2d,
            name : color,
            precision: medium
        },
        {
            type : float4,
            name : resolution,
            precision: high
        },
        {
            type : float4,
            name : uvparams,
            precision: high
        }
    ],
    variables : [
        vertex
    ],
    depthWrite : false,
    depthCulling : false,
    domain: postprocess
}

vertex {
    void postProcessVertex(inout PostProcessVertexInputs postProcess) {
        postProcess.vertex.xy = postProcess.normalizedUV * (materialParams.uvparams.xy * materialParams.uvparams.zw);
    }
}

fragment {
    void postProcess(inout PostProcessInputs postProcess) {
        highp vec2 uv = variable_vertex.xy; // interpolated to pixel center
        highp float du = 0.5 * materialParams.uvparams.z;
        highp float dv = 0.5 * materialParams.uvparams.w;
        vec4 c;
        c  = textureLod(materialParams_color, uv + vec2(-du, -dv), 0.0);
        c += textureLod(materialParams_color, uv + vec2( du, -dv), 0.0);
        c += textureLod(materialParams_color, uv + vec2( du,  dv), 0.0);
        c += textureLod(materialParams_color, uv + vec2(-du,  dv), 0.0);
        postProcess.color = c * 0.25;
    }
}

